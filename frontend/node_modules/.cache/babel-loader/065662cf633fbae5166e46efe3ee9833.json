{"remainingRequest":"C:\\Users\\dekel\\Desktop\\Coding Acadeny\\MyProjects\\Day47-CLI-FrameworkAdvanced\\mistertoy\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\dekel\\Desktop\\Coding Acadeny\\MyProjects\\Day47-CLI-FrameworkAdvanced\\mistertoy\\frontend\\src\\store\\modules\\user-store.js","dependencies":[{"path":"C:\\Users\\dekel\\Desktop\\Coding Acadeny\\MyProjects\\Day47-CLI-FrameworkAdvanced\\mistertoy\\frontend\\src\\store\\modules\\user-store.js","mtime":1626098264846},{"path":"C:\\Users\\dekel\\Desktop\\Coding Acadeny\\MyProjects\\Day47-CLI-FrameworkAdvanced\\mistertoy\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\dekel\\Desktop\\Coding Acadeny\\MyProjects\\Day47-CLI-FrameworkAdvanced\\mistertoy\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/dekel/Desktop/Coding Acadeny/MyProjects/Day47-CLI-FrameworkAdvanced/mistertoy/frontend/src/store/modules/user-store.js"],"names":["userService","socketService","SOCKET_EMIT_USER_WATCH","SOCKET_EVENT_USER_UPDATED","userStore","state","loggedinUser","getLoggedinUser","users","watchedUser","getters","mutations","setLoggedinUser","user","userId","filter","_id","actions","login","commit","userCred","type","console","log","signup","logout","loadUsers","getUsers","loadAndWatchUser","getById","emit","off","on","removeUser","remove","updateUser","update"],"mappings":"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","sourcesContent":["import { userService } from '../../services/user.service'\r\nimport { socketService, SOCKET_EMIT_USER_WATCH, SOCKET_EVENT_USER_UPDATED } from '../services/socket.service'\r\n\r\n// var localLoggedinUser = null;\r\n// if (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user || null);\r\n\r\nexport const userStore = {\r\n    state: {\r\n        loggedinUser: userService.getLoggedinUser(),\r\n        users: [],\r\n        watchedUser: null\r\n    },\r\n    getters: {\r\n        users({ users }) { return users },\r\n        loggedinUser({ loggedinUser }) { return loggedinUser },\r\n        watchedUser({ watchedUser }) { return watchedUser }\r\n    },\r\n    mutations: {\r\n        setLoggedinUser(state, { user }) {\r\n            state.loggedinUser = user;\r\n        },\r\n        setLoggedinUser(state, { user }) {\r\n            state.loggedinUser = user;\r\n        },\r\n        setWatchedUser(state, { user }) {\r\n            state.watchedUser = user;\r\n        },       \r\n        setUsers(state, { users }) {\r\n            state.users = users;\r\n        },\r\n        removeUser(state, { userId }) {\r\n            state.users = state.users.filter(user => user._id !== userId)\r\n        },\r\n    },\r\n    actions: {\r\n        async login({ commit }, { userCred }) {\r\n          try { \r\n             const user = await userService.login(userCred);\r\n                commit({ type: 'setLoggedinUser', user })\r\n                return user;\r\n            } catch (err) {\r\n                console.log('userStore: Error in login', err)\r\n                throw err\r\n            }\r\n        },\r\n        async signup({ commit }, { userCred }) {\r\n            try {\r\n                const user = await userService.signup(userCred)\r\n                commit({ type: 'setLoggedinUser', user })\r\n                return user;\r\n            } catch (err) {\r\n                console.log('userStore: Error in signup', err)\r\n                throw err\r\n            }\r\n\r\n        },\r\n        async logout({ commit }) {\r\n            try {\r\n                await userService.logout()\r\n                commit({ type: 'setLoggedinUser', user: null })\r\n            } catch (err) {\r\n                console.log('userStore: Error in logout', err)\r\n                throw err\r\n            }\r\n        },\r\n        async loadUsers({ commit }) {\r\n            // TODO: loading\r\n            try {\r\n                const users = await userService.getUsers();\r\n                commit({ type: 'setUsers', users })\r\n            } catch (err) {\r\n                console.log('userStore: Error in loadUsers', err)\r\n                throw err\r\n            }\r\n        },        \r\n        async loadAndWatchUser({ commit }, { userId }) {\r\n            try {\r\n                const user = await userService.getById(userId);\r\n                commit({ type: 'setWatchedUser', user })\r\n                socketService.emit(SOCKET_EMIT_USER_WATCH, userId) \r\n                socketService.off(SOCKET_EVENT_USER_UPDATED)\r\n                socketService.on(SOCKET_EVENT_USER_UPDATED, user => {\r\n                    commit({ type: 'setWatchedUser', user })\r\n                })\r\n            } catch (err) {\r\n                console.log('userStore: Error in loadAndWatchUser', err)\r\n                throw err\r\n            }\r\n        },\r\n        async removeUser({ commit }, { userId }) {\r\n            try {\r\n                await userService.remove(userId);\r\n                commit({ type: 'removeUser', userId })\r\n            } catch (err) {\r\n                console.log('userStore: Error in removeUser', err)\r\n                throw err\r\n            }\r\n        },\r\n        async updateUser({ commit }, { user }) {\r\n            try {\r\n                user = await userService.update(user);\r\n                commit({ type: 'setUser', user })\r\n            } catch (err) {\r\n                console.log('userStore: Error in updateUser', err)\r\n                throw err\r\n            }\r\n\r\n        }\r\n    }\r\n}"]}]}